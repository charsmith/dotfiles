"Charles' somewhat weird vimrc

" Pathogen setup

call pathogen#runtime_append_all_bundles()
call pathogen#helptags()


"don't emulate vi
set nocompatible

"show the file editign stuff in the console title
set title

let mapleader=","

"tabs
"map <leader>n :tabnew<CR> 

"swap files all in the same place
"set dir=~/temp
set nobackup
set noswapfile

"omni-completion
filetype on
filetype plugin on
filetype plugin indent on
filetype indent on
set ofu=syntaxcomplete#Complete

"always show the status bar
set laststatus=2

"move on splits 
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

"behaviors 
set backspace=indent,eol,start
set splitright 			" put split window on the right
"set autochdir
set hlsearch
set incsearch
set autoread
set ruler
set encoding=utf-8

"make searches case insensitive unless they have capitals in them
set ignorecase
set smartcase

"Treat Y as C and D work
map Y y$

"nnoremap <Esc> :noh<CR><Esc>

"short messages
set shortmess=atI

"See whitespace
set listchars=tab:>-,trail:.,eol:$,nbsp:.
nmap <silent> <leader>w :set nolist!<CR>

"sudo I forget you
cmap w!! %!sudo tee > /dev/null %

"edit vimrc and reload it
map <leader>e :e! ~/.vimrc<cr>
map <leader>s :source ~/.vimrc<cr>

map <leader>c :let @/ = ""<cr>
"remap tab keys to buffer to remain consistent
"map gt :bn<cr>
"map gT :bp<cr>

set hidden

"reformat lines
map <leader>v 0ma}b:'a,.j<CR>0100 ? <CR>i<CR><Esc>

"autoload vimrc
autocmd BufWritePost $MYVIMRC,~/.dotfiles/vimrc,$MYVIMRC.local nested :source $MYVIMRC

"show syntax highlighting
syntax on

"tabs
set shiftwidth=4
set autoindent
set shiftround
set smartindent
set tabstop=4
set et

set pastetoggle=<F12>


"lines can only be so long for now
"set textwidth=119

"don't beep at me ever
set noerrorbells
set visualbell
set t_vb=

"keep two rows when scrolling
set scrolloff=2

"set t_Co=256
set number

if has('gui_running')
    "columns    width of the display
    set background=dark
endif

"spelling
"map <C-w> <Esc>:setlocal spell spelllang=en_us<CR>
"map <C-z> <Esc>:setlocal nospell<CR>

"perl
autocmd Filetype perl set makeprg=$VIMRUNTIME/tools/efm_perl.pl\ -c\ %\ $*
autocmd Filetype perl set errorformat=%f:%l:%m
"filetype on
"doesn't seem to read tex file properly
autocmd BufNewFile,BufRead *.tex set filetype=tex


set wildignore=*.swp
set wildignore+=*.bak
set wildignore+=*.class
set wildignore+=*.gz
set wildignore+=*.o
set wildignore+=*.pyc
set wildignore+=*.tmp
set wildignore+=*.zip
set wildignore+=*/.git/*
set wildignore+=*/.hg/*
set wildignore+=*/.svn/*
set wildignore+=*/build/*
set wildignore+=*/dist/*
set wildignore+=*/target/*

"Plugins

"Solarized
set background=dark
let g:solarized_termcolors = 256
let g:solarized_visibility = "high"
let g:solarized_contrast = "high"
colorscheme solarized

"Powerline
let g:Powerline_dividers_override = [' >', '>', '< ', '<']

"ctrlp
map <leader>t :CtrlP<CR>
let g:ctrlp_dotfiles = 1

"buffergator
let g:buffergator_suppress_keymaps = 1
map <leader>b :BuffergatorToggle<CR>

"NerdTree
map <leader>n :NERDTreeToggle<CR>

"Gundo
map <leader>g :GundoToggle<CR>

"match it
ru macros/matchit.vim

"syntastic
let g:syntastic_check_on_open=1
let g:syntastic_python_checker = 'pyflakes'

let g:syntastic_mode_map = { 'mode': 'active',
                            \ 'active_filetypes': [],
                            \ 'passive_filetypes': ['html'] }

augroup filetypedetect
    au BufNewFile,BufRead *.pig  set filetype=pig  syntax=pig
    au BufNewFile,BufRead *.hive set filetype=hive syntax=plsql
augroup END 
